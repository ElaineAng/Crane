// Code generated by protoc-gen-go. DO NOT EDIT.
// source: SDFSMessage.proto

package SDFSMessage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OpType int32

const (
	OpType_PUT          OpType = 0
	OpType_GET          OpType = 1
	OpType_DELETE       OpType = 2
	OpType_GET_VERSIONS OpType = 3
	OpType_LS           OpType = 4
	OpType_STORE        OpType = 5
)

var OpType_name = map[int32]string{
	0: "PUT",
	1: "GET",
	2: "DELETE",
	3: "GET_VERSIONS",
	4: "LS",
	5: "STORE",
}
var OpType_value = map[string]int32{
	"PUT":          0,
	"GET":          1,
	"DELETE":       2,
	"GET_VERSIONS": 3,
	"LS":           4,
	"STORE":        5,
}

func (x OpType) String() string {
	return proto.EnumName(OpType_name, int32(x))
}
func (OpType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_SDFSMessage_31e0d17b84c45ab9, []int{0}
}

type OpStatus int32

const (
	OpStatus_OK     OpStatus = 0
	OpStatus_CREATE OpStatus = 1
	OpStatus_DEL    OpStatus = 2
)

var OpStatus_name = map[int32]string{
	0: "OK",
	1: "CREATE",
	2: "DEL",
}
var OpStatus_value = map[string]int32{
	"OK":     0,
	"CREATE": 1,
	"DEL":    2,
}

func (x OpStatus) String() string {
	return proto.EnumName(OpStatus_name, int32(x))
}
func (OpStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_SDFSMessage_31e0d17b84c45ab9, []int{1}
}

type Node struct {
	HostName             string   `protobuf:"bytes,1,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	HostIp               string   `protobuf:"bytes,2,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
	Port                 int64    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_SDFSMessage_31e0d17b84c45ab9, []int{0}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *Node) GetHostIp() string {
	if m != nil {
		return m.HostIp
	}
	return ""
}

func (m *Node) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

type OpResponse struct {
	Status               OpStatus `protobuf:"varint,1,opt,name=status,proto3,enum=SDFSMessage.OpStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpResponse) Reset()         { *m = OpResponse{} }
func (m *OpResponse) String() string { return proto.CompactTextString(m) }
func (*OpResponse) ProtoMessage()    {}
func (*OpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_SDFSMessage_31e0d17b84c45ab9, []int{1}
}
func (m *OpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpResponse.Unmarshal(m, b)
}
func (m *OpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpResponse.Marshal(b, m, deterministic)
}
func (dst *OpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpResponse.Merge(dst, src)
}
func (m *OpResponse) XXX_Size() int {
	return xxx_messageInfo_OpResponse.Size(m)
}
func (m *OpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpResponse proto.InternalMessageInfo

func (m *OpResponse) GetStatus() OpStatus {
	if m != nil {
		return m.Status
	}
	return OpStatus_OK
}

type MetadataOpRequest struct {
	Op                   OpType   `protobuf:"varint,1,opt,name=op,proto3,enum=SDFSMessage.OpType" json:"op,omitempty"`
	SdfsFilename         string   `protobuf:"bytes,2,opt,name=sdfs_filename,json=sdfsFilename,proto3" json:"sdfs_filename,omitempty"`
	LocalFilename        string   `protobuf:"bytes,3,opt,name=local_filename,json=localFilename,proto3" json:"local_filename,omitempty"`
	Versions             int64    `protobuf:"varint,4,opt,name=versions,proto3" json:"versions,omitempty"`
	Requestor            *Node    `protobuf:"bytes,5,opt,name=requestor,proto3" json:"requestor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetadataOpRequest) Reset()         { *m = MetadataOpRequest{} }
func (m *MetadataOpRequest) String() string { return proto.CompactTextString(m) }
func (*MetadataOpRequest) ProtoMessage()    {}
func (*MetadataOpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_SDFSMessage_31e0d17b84c45ab9, []int{2}
}
func (m *MetadataOpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetadataOpRequest.Unmarshal(m, b)
}
func (m *MetadataOpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetadataOpRequest.Marshal(b, m, deterministic)
}
func (dst *MetadataOpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetadataOpRequest.Merge(dst, src)
}
func (m *MetadataOpRequest) XXX_Size() int {
	return xxx_messageInfo_MetadataOpRequest.Size(m)
}
func (m *MetadataOpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MetadataOpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MetadataOpRequest proto.InternalMessageInfo

func (m *MetadataOpRequest) GetOp() OpType {
	if m != nil {
		return m.Op
	}
	return OpType_PUT
}

func (m *MetadataOpRequest) GetSdfsFilename() string {
	if m != nil {
		return m.SdfsFilename
	}
	return ""
}

func (m *MetadataOpRequest) GetLocalFilename() string {
	if m != nil {
		return m.LocalFilename
	}
	return ""
}

func (m *MetadataOpRequest) GetVersions() int64 {
	if m != nil {
		return m.Versions
	}
	return 0
}

func (m *MetadataOpRequest) GetRequestor() *Node {
	if m != nil {
		return m.Requestor
	}
	return nil
}

type MetadataOpResponse struct {
	Status               OpStatus `protobuf:"varint,1,opt,name=status,proto3,enum=SDFSMessage.OpStatus" json:"status,omitempty"`
	Hosts                []*Node  `protobuf:"bytes,2,rep,name=hosts,proto3" json:"hosts,omitempty"`
	Versions             int64    `protobuf:"varint,3,opt,name=versions,proto3" json:"versions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetadataOpResponse) Reset()         { *m = MetadataOpResponse{} }
func (m *MetadataOpResponse) String() string { return proto.CompactTextString(m) }
func (*MetadataOpResponse) ProtoMessage()    {}
func (*MetadataOpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_SDFSMessage_31e0d17b84c45ab9, []int{3}
}
func (m *MetadataOpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetadataOpResponse.Unmarshal(m, b)
}
func (m *MetadataOpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetadataOpResponse.Marshal(b, m, deterministic)
}
func (dst *MetadataOpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetadataOpResponse.Merge(dst, src)
}
func (m *MetadataOpResponse) XXX_Size() int {
	return xxx_messageInfo_MetadataOpResponse.Size(m)
}
func (m *MetadataOpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MetadataOpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MetadataOpResponse proto.InternalMessageInfo

func (m *MetadataOpResponse) GetStatus() OpStatus {
	if m != nil {
		return m.Status
	}
	return OpStatus_OK
}

func (m *MetadataOpResponse) GetHosts() []*Node {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *MetadataOpResponse) GetVersions() int64 {
	if m != nil {
		return m.Versions
	}
	return 0
}

type FileOpRequest struct {
	Op                   OpType   `protobuf:"varint,1,opt,name=op,proto3,enum=SDFSMessage.OpType" json:"op,omitempty"`
	SdfsFilename         string   `protobuf:"bytes,2,opt,name=sdfs_filename,json=sdfsFilename,proto3" json:"sdfs_filename,omitempty"`
	File                 []byte   `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
	Versions             int64    `protobuf:"varint,4,opt,name=versions,proto3" json:"versions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileOpRequest) Reset()         { *m = FileOpRequest{} }
func (m *FileOpRequest) String() string { return proto.CompactTextString(m) }
func (*FileOpRequest) ProtoMessage()    {}
func (*FileOpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_SDFSMessage_31e0d17b84c45ab9, []int{4}
}
func (m *FileOpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileOpRequest.Unmarshal(m, b)
}
func (m *FileOpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileOpRequest.Marshal(b, m, deterministic)
}
func (dst *FileOpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileOpRequest.Merge(dst, src)
}
func (m *FileOpRequest) XXX_Size() int {
	return xxx_messageInfo_FileOpRequest.Size(m)
}
func (m *FileOpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FileOpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FileOpRequest proto.InternalMessageInfo

func (m *FileOpRequest) GetOp() OpType {
	if m != nil {
		return m.Op
	}
	return OpType_PUT
}

func (m *FileOpRequest) GetSdfsFilename() string {
	if m != nil {
		return m.SdfsFilename
	}
	return ""
}

func (m *FileOpRequest) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *FileOpRequest) GetVersions() int64 {
	if m != nil {
		return m.Versions
	}
	return 0
}

type FileOpResponse struct {
	Status               OpStatus `protobuf:"varint,1,opt,name=status,proto3,enum=SDFSMessage.OpStatus" json:"status,omitempty"`
	File                 []byte   `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileOpResponse) Reset()         { *m = FileOpResponse{} }
func (m *FileOpResponse) String() string { return proto.CompactTextString(m) }
func (*FileOpResponse) ProtoMessage()    {}
func (*FileOpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_SDFSMessage_31e0d17b84c45ab9, []int{5}
}
func (m *FileOpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileOpResponse.Unmarshal(m, b)
}
func (m *FileOpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileOpResponse.Marshal(b, m, deterministic)
}
func (dst *FileOpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileOpResponse.Merge(dst, src)
}
func (m *FileOpResponse) XXX_Size() int {
	return xxx_messageInfo_FileOpResponse.Size(m)
}
func (m *FileOpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FileOpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FileOpResponse proto.InternalMessageInfo

func (m *FileOpResponse) GetStatus() OpStatus {
	if m != nil {
		return m.Status
	}
	return OpStatus_OK
}

func (m *FileOpResponse) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

type ReplicateRequest struct {
	Src                  *Node    `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst                  *Node    `protobuf:"bytes,2,opt,name=dst,proto3" json:"dst,omitempty"`
	Filename             string   `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicateRequest) Reset()         { *m = ReplicateRequest{} }
func (m *ReplicateRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicateRequest) ProtoMessage()    {}
func (*ReplicateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_SDFSMessage_31e0d17b84c45ab9, []int{6}
}
func (m *ReplicateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicateRequest.Unmarshal(m, b)
}
func (m *ReplicateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicateRequest.Marshal(b, m, deterministic)
}
func (dst *ReplicateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicateRequest.Merge(dst, src)
}
func (m *ReplicateRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicateRequest.Size(m)
}
func (m *ReplicateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicateRequest proto.InternalMessageInfo

func (m *ReplicateRequest) GetSrc() *Node {
	if m != nil {
		return m.Src
	}
	return nil
}

func (m *ReplicateRequest) GetDst() *Node {
	if m != nil {
		return m.Dst
	}
	return nil
}

func (m *ReplicateRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type FailureReportRequest struct {
	FailedNode           *Node    `protobuf:"bytes,1,opt,name=failed_node,json=failedNode,proto3" json:"failed_node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FailureReportRequest) Reset()         { *m = FailureReportRequest{} }
func (m *FailureReportRequest) String() string { return proto.CompactTextString(m) }
func (*FailureReportRequest) ProtoMessage()    {}
func (*FailureReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_SDFSMessage_31e0d17b84c45ab9, []int{7}
}
func (m *FailureReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailureReportRequest.Unmarshal(m, b)
}
func (m *FailureReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailureReportRequest.Marshal(b, m, deterministic)
}
func (dst *FailureReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailureReportRequest.Merge(dst, src)
}
func (m *FailureReportRequest) XXX_Size() int {
	return xxx_messageInfo_FailureReportRequest.Size(m)
}
func (m *FailureReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FailureReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FailureReportRequest proto.InternalMessageInfo

func (m *FailureReportRequest) GetFailedNode() *Node {
	if m != nil {
		return m.FailedNode
	}
	return nil
}

type UpdateMetaRequest struct {
	UpdateNode           *Node    `protobuf:"bytes,1,opt,name=update_node,json=updateNode,proto3" json:"update_node,omitempty"`
	SdfsFilename         string   `protobuf:"bytes,2,opt,name=sdfs_filename,json=sdfsFilename,proto3" json:"sdfs_filename,omitempty"`
	Versions             int64    `protobuf:"varint,3,opt,name=versions,proto3" json:"versions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateMetaRequest) Reset()         { *m = UpdateMetaRequest{} }
func (m *UpdateMetaRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateMetaRequest) ProtoMessage()    {}
func (*UpdateMetaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_SDFSMessage_31e0d17b84c45ab9, []int{8}
}
func (m *UpdateMetaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateMetaRequest.Unmarshal(m, b)
}
func (m *UpdateMetaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateMetaRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateMetaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateMetaRequest.Merge(dst, src)
}
func (m *UpdateMetaRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateMetaRequest.Size(m)
}
func (m *UpdateMetaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateMetaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateMetaRequest proto.InternalMessageInfo

func (m *UpdateMetaRequest) GetUpdateNode() *Node {
	if m != nil {
		return m.UpdateNode
	}
	return nil
}

func (m *UpdateMetaRequest) GetSdfsFilename() string {
	if m != nil {
		return m.SdfsFilename
	}
	return ""
}

func (m *UpdateMetaRequest) GetVersions() int64 {
	if m != nil {
		return m.Versions
	}
	return 0
}

func init() {
	proto.RegisterType((*Node)(nil), "SDFSMessage.Node")
	proto.RegisterType((*OpResponse)(nil), "SDFSMessage.OpResponse")
	proto.RegisterType((*MetadataOpRequest)(nil), "SDFSMessage.MetadataOpRequest")
	proto.RegisterType((*MetadataOpResponse)(nil), "SDFSMessage.MetadataOpResponse")
	proto.RegisterType((*FileOpRequest)(nil), "SDFSMessage.FileOpRequest")
	proto.RegisterType((*FileOpResponse)(nil), "SDFSMessage.FileOpResponse")
	proto.RegisterType((*ReplicateRequest)(nil), "SDFSMessage.ReplicateRequest")
	proto.RegisterType((*FailureReportRequest)(nil), "SDFSMessage.FailureReportRequest")
	proto.RegisterType((*UpdateMetaRequest)(nil), "SDFSMessage.UpdateMetaRequest")
	proto.RegisterEnum("SDFSMessage.OpType", OpType_name, OpType_value)
	proto.RegisterEnum("SDFSMessage.OpStatus", OpStatus_name, OpStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SdfsClient is the client API for Sdfs service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SdfsClient interface {
	MetadataOp(ctx context.Context, in *MetadataOpRequest, opts ...grpc.CallOption) (*MetadataOpResponse, error)
	UpdateMeta(ctx context.Context, in *UpdateMetaRequest, opts ...grpc.CallOption) (*OpResponse, error)
	FileOp(ctx context.Context, opts ...grpc.CallOption) (Sdfs_FileOpClient, error)
	Replicate(ctx context.Context, in *ReplicateRequest, opts ...grpc.CallOption) (*OpResponse, error)
	FailureReport(ctx context.Context, in *FailureReportRequest, opts ...grpc.CallOption) (*OpResponse, error)
	HandleLocalClient(ctx context.Context, in *MetadataOpRequest, opts ...grpc.CallOption) (*OpResponse, error)
}

type sdfsClient struct {
	cc *grpc.ClientConn
}

func NewSdfsClient(cc *grpc.ClientConn) SdfsClient {
	return &sdfsClient{cc}
}

func (c *sdfsClient) MetadataOp(ctx context.Context, in *MetadataOpRequest, opts ...grpc.CallOption) (*MetadataOpResponse, error) {
	out := new(MetadataOpResponse)
	err := c.cc.Invoke(ctx, "/SDFSMessage.Sdfs/MetadataOp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sdfsClient) UpdateMeta(ctx context.Context, in *UpdateMetaRequest, opts ...grpc.CallOption) (*OpResponse, error) {
	out := new(OpResponse)
	err := c.cc.Invoke(ctx, "/SDFSMessage.Sdfs/UpdateMeta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sdfsClient) FileOp(ctx context.Context, opts ...grpc.CallOption) (Sdfs_FileOpClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Sdfs_serviceDesc.Streams[0], "/SDFSMessage.Sdfs/FileOp", opts...)
	if err != nil {
		return nil, err
	}
	x := &sdfsFileOpClient{stream}
	return x, nil
}

type Sdfs_FileOpClient interface {
	Send(*FileOpRequest) error
	Recv() (*FileOpResponse, error)
	grpc.ClientStream
}

type sdfsFileOpClient struct {
	grpc.ClientStream
}

func (x *sdfsFileOpClient) Send(m *FileOpRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sdfsFileOpClient) Recv() (*FileOpResponse, error) {
	m := new(FileOpResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *sdfsClient) Replicate(ctx context.Context, in *ReplicateRequest, opts ...grpc.CallOption) (*OpResponse, error) {
	out := new(OpResponse)
	err := c.cc.Invoke(ctx, "/SDFSMessage.Sdfs/Replicate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sdfsClient) FailureReport(ctx context.Context, in *FailureReportRequest, opts ...grpc.CallOption) (*OpResponse, error) {
	out := new(OpResponse)
	err := c.cc.Invoke(ctx, "/SDFSMessage.Sdfs/FailureReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sdfsClient) HandleLocalClient(ctx context.Context, in *MetadataOpRequest, opts ...grpc.CallOption) (*OpResponse, error) {
	out := new(OpResponse)
	err := c.cc.Invoke(ctx, "/SDFSMessage.Sdfs/HandleLocalClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SdfsServer is the server API for Sdfs service.
type SdfsServer interface {
	MetadataOp(context.Context, *MetadataOpRequest) (*MetadataOpResponse, error)
	UpdateMeta(context.Context, *UpdateMetaRequest) (*OpResponse, error)
	FileOp(Sdfs_FileOpServer) error
	Replicate(context.Context, *ReplicateRequest) (*OpResponse, error)
	FailureReport(context.Context, *FailureReportRequest) (*OpResponse, error)
	HandleLocalClient(context.Context, *MetadataOpRequest) (*OpResponse, error)
}

func RegisterSdfsServer(s *grpc.Server, srv SdfsServer) {
	s.RegisterService(&_Sdfs_serviceDesc, srv)
}

func _Sdfs_MetadataOp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetadataOpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SdfsServer).MetadataOp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SDFSMessage.Sdfs/MetadataOp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SdfsServer).MetadataOp(ctx, req.(*MetadataOpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sdfs_UpdateMeta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateMetaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SdfsServer).UpdateMeta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SDFSMessage.Sdfs/UpdateMeta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SdfsServer).UpdateMeta(ctx, req.(*UpdateMetaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sdfs_FileOp_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SdfsServer).FileOp(&sdfsFileOpServer{stream})
}

type Sdfs_FileOpServer interface {
	Send(*FileOpResponse) error
	Recv() (*FileOpRequest, error)
	grpc.ServerStream
}

type sdfsFileOpServer struct {
	grpc.ServerStream
}

func (x *sdfsFileOpServer) Send(m *FileOpResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sdfsFileOpServer) Recv() (*FileOpRequest, error) {
	m := new(FileOpRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Sdfs_Replicate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SdfsServer).Replicate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SDFSMessage.Sdfs/Replicate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SdfsServer).Replicate(ctx, req.(*ReplicateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sdfs_FailureReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FailureReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SdfsServer).FailureReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SDFSMessage.Sdfs/FailureReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SdfsServer).FailureReport(ctx, req.(*FailureReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sdfs_HandleLocalClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetadataOpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SdfsServer).HandleLocalClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SDFSMessage.Sdfs/HandleLocalClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SdfsServer).HandleLocalClient(ctx, req.(*MetadataOpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sdfs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "SDFSMessage.Sdfs",
	HandlerType: (*SdfsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MetadataOp",
			Handler:    _Sdfs_MetadataOp_Handler,
		},
		{
			MethodName: "UpdateMeta",
			Handler:    _Sdfs_UpdateMeta_Handler,
		},
		{
			MethodName: "Replicate",
			Handler:    _Sdfs_Replicate_Handler,
		},
		{
			MethodName: "FailureReport",
			Handler:    _Sdfs_FailureReport_Handler,
		},
		{
			MethodName: "HandleLocalClient",
			Handler:    _Sdfs_HandleLocalClient_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FileOp",
			Handler:       _Sdfs_FileOp_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "SDFSMessage.proto",
}

func init() { proto.RegisterFile("SDFSMessage.proto", fileDescriptor_SDFSMessage_31e0d17b84c45ab9) }

var fileDescriptor_SDFSMessage_31e0d17b84c45ab9 = []byte{
	// 633 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x5f, 0x6f, 0xd3, 0x3e,
	0x14, 0x5d, 0x92, 0x36, 0x5b, 0xef, 0xd6, 0x29, 0xbd, 0xbf, 0x1f, 0x5a, 0xd5, 0x09, 0x28, 0x99,
	0xd0, 0xaa, 0x49, 0x0c, 0x54, 0x1e, 0x79, 0x42, 0x5b, 0x36, 0xc6, 0xba, 0x76, 0x72, 0x32, 0x5e,
	0x2b, 0xb3, 0xb8, 0x10, 0x29, 0xab, 0x4d, 0xec, 0x22, 0xf8, 0x06, 0xf0, 0xe9, 0x10, 0xdf, 0x08,
	0xd9, 0x59, 0xff, 0xa4, 0x6b, 0x3b, 0x34, 0x89, 0x37, 0xfb, 0xde, 0xa3, 0x73, 0xcf, 0x3d, 0x3d,
	0x4e, 0xa1, 0x16, 0x1e, 0x9f, 0x84, 0x17, 0x4c, 0x4a, 0xfa, 0x89, 0x1d, 0x8a, 0x8c, 0x2b, 0x8e,
	0x9b, 0x33, 0x25, 0xff, 0x12, 0x4a, 0x5d, 0x1e, 0x33, 0xdc, 0x85, 0xca, 0x67, 0x2e, 0x55, 0x7f,
	0x48, 0x6f, 0x58, 0xdd, 0x6a, 0x5a, 0xad, 0x0a, 0xd9, 0xd0, 0x85, 0x2e, 0xbd, 0x61, 0xb8, 0x03,
	0xeb, 0xa6, 0x99, 0x88, 0xba, 0x6d, 0x5a, 0xae, 0xbe, 0x9e, 0x09, 0x44, 0x28, 0x09, 0x9e, 0xa9,
	0xba, 0xd3, 0xb4, 0x5a, 0x0e, 0x31, 0x67, 0xff, 0x0d, 0x40, 0x4f, 0x10, 0x26, 0x05, 0x1f, 0x4a,
	0x86, 0x2f, 0xc0, 0x95, 0x8a, 0xaa, 0x91, 0x34, 0xa4, 0xdb, 0xed, 0x47, 0x87, 0xb3, 0x82, 0x7a,
	0x22, 0x34, 0x4d, 0x72, 0x0b, 0xf2, 0x7f, 0x5b, 0x50, 0xbb, 0x60, 0x8a, 0xc6, 0x54, 0x51, 0xcd,
	0xf2, 0x65, 0xc4, 0xa4, 0xc2, 0x3d, 0xb0, 0xb9, 0xb8, 0x25, 0xf8, 0x6f, 0x8e, 0x20, 0xfa, 0x2e,
	0x18, 0xb1, 0xb9, 0xc0, 0x3d, 0xa8, 0xca, 0x78, 0x20, 0xfb, 0x83, 0x24, 0x65, 0x66, 0x8b, 0x5c,
	0xea, 0x96, 0x2e, 0x9e, 0xdc, 0xd6, 0xf0, 0x39, 0x6c, 0xa7, 0xfc, 0x9a, 0xa6, 0x53, 0x94, 0x63,
	0x50, 0x55, 0x53, 0x9d, 0xc0, 0x1a, 0xb0, 0xf1, 0x95, 0x65, 0x32, 0xe1, 0x43, 0x59, 0x2f, 0x99,
	0xdd, 0x26, 0x77, 0x7c, 0x09, 0x95, 0x2c, 0xd7, 0xc5, 0xb3, 0x7a, 0xb9, 0x69, 0xb5, 0x36, 0xdb,
	0xb5, 0x82, 0x26, 0xed, 0x27, 0x99, 0x62, 0xfc, 0x1f, 0x16, 0xe0, 0xec, 0x4e, 0x0f, 0x72, 0x06,
	0xf7, 0xa1, 0xac, 0x4d, 0x97, 0x75, 0xbb, 0xe9, 0x2c, 0x1e, 0x99, 0xf7, 0x0b, 0xda, 0x9d, 0xa2,
	0x76, 0xff, 0xa7, 0x05, 0x55, 0xbd, 0xe4, 0xbf, 0xb0, 0x16, 0xa1, 0xa4, 0xfb, 0x66, 0xe6, 0x16,
	0x31, 0xe7, 0x55, 0x3e, 0xfa, 0x21, 0x6c, 0x8f, 0xa5, 0x3c, 0xcc, 0x91, 0xf1, 0x40, 0x7b, 0x3a,
	0xd0, 0xff, 0x06, 0x1e, 0x61, 0x22, 0x4d, 0xae, 0xa9, 0x62, 0xd3, 0x15, 0x1d, 0x99, 0x5d, 0x1b,
	0xce, 0x85, 0xbe, 0xe9, 0xae, 0x06, 0xc5, 0x52, 0x19, 0xae, 0xc5, 0xa0, 0x58, 0x2a, 0xbd, 0xce,
	0x5c, 0x6e, 0x26, 0x77, 0xff, 0x3d, 0xfc, 0x7f, 0x42, 0x93, 0x74, 0x94, 0x31, 0xc2, 0xf4, 0x3b,
	0x18, 0x4f, 0x6f, 0xc3, 0xe6, 0x80, 0x26, 0x29, 0x8b, 0xfb, 0x43, 0x1e, 0xb3, 0xe5, 0x2a, 0x20,
	0x47, 0xe9, 0xb3, 0x4e, 0x4c, 0xed, 0x4a, 0xc4, 0x54, 0x31, 0x9d, 0x9b, 0x19, 0xa6, 0x91, 0x29,
	0xde, 0xc7, 0x94, 0xa3, 0xcc, 0xb3, 0xfe, 0xab, 0x5f, 0x6e, 0x45, 0x62, 0x0e, 0xce, 0xc1, 0xcd,
	0x83, 0x80, 0xeb, 0xe0, 0x5c, 0x5e, 0x45, 0xde, 0x9a, 0x3e, 0x9c, 0x06, 0x91, 0x67, 0x21, 0x80,
	0x7b, 0x1c, 0x74, 0x82, 0x28, 0xf0, 0x6c, 0xf4, 0x60, 0xeb, 0x34, 0x88, 0xfa, 0x1f, 0x02, 0x12,
	0x9e, 0xf5, 0xba, 0xa1, 0xe7, 0xa0, 0x0b, 0x76, 0x27, 0xf4, 0x4a, 0x58, 0x81, 0x72, 0x18, 0xf5,
	0x48, 0xe0, 0x95, 0x0f, 0xf6, 0x61, 0x63, 0xfc, 0x2b, 0xea, 0x76, 0xef, 0xdc, 0x5b, 0xd3, 0x24,
	0x47, 0x24, 0x78, 0x1b, 0x05, 0x9e, 0xa5, 0x99, 0x8f, 0x83, 0x8e, 0x67, 0xb7, 0x7f, 0x39, 0x50,
	0x0a, 0xe3, 0x81, 0xc4, 0x1e, 0xc0, 0xf4, 0xe9, 0xe0, 0x93, 0xc2, 0xb2, 0x77, 0xbe, 0x13, 0x8d,
	0xa7, 0x4b, 0xfb, 0x79, 0xc2, 0xfc, 0x35, 0x3c, 0x05, 0x98, 0x3a, 0x3b, 0x47, 0x78, 0xc7, 0xf2,
	0xc6, 0xce, 0x5c, 0x02, 0x0b, 0x44, 0x6e, 0x1e, 0x5f, 0x6c, 0x14, 0x40, 0x85, 0xe7, 0xd5, 0xd8,
	0x5d, 0xd8, 0x1b, 0x93, 0xb4, 0xac, 0x57, 0x16, 0x06, 0x50, 0x99, 0x44, 0x16, 0x1f, 0x17, 0xf0,
	0xf3, 0x51, 0x5e, 0xa5, 0xe7, 0x02, 0xaa, 0x85, 0xfc, 0xe1, 0xb3, 0xe2, 0xe8, 0x05, 0xd9, 0x5c,
	0x45, 0xd7, 0x85, 0xda, 0x3b, 0x3a, 0x8c, 0x53, 0xd6, 0xd1, 0x1f, 0xc6, 0xa3, 0x34, 0x61, 0x43,
	0x75, 0xaf, 0xff, 0xcb, 0xf9, 0x3e, 0xba, 0xe6, 0xbf, 0xe7, 0xf5, 0x9f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x9f, 0x93, 0x8a, 0xfd, 0x90, 0x06, 0x00, 0x00,
}
